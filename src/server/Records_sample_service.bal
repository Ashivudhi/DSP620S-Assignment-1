import ballerina/grpc;

listener grpc:Listener ep = new (9090);

service Records on ep {

    resource function newRecord(grpc:Caller caller, NewRecordRequest value) {
        // Implementation goes here.

        // You should return a NewRecordResponse
    }
    resource function update(grpc:Caller caller, UpdateRecordRequest value) {
        // Implementation goes here.

        // You should return a UpdateRecordResponse
    }
    resource function read(grpc:Caller caller, ReadRecordRequest value) {
        // Implementation goes here.

        // You should return a ReadRecordResponse
    }
}

public type artists record {|
    string name = "";
    boolean member = false;
    
|};

public type songs record {|
    string title = "";
    string genre = "";
    string platform = "";
    
|};

public type band record {|
    string name = "";
    
|};

public type date record {|
    int date = 0;
    
|};

public type NewRecordRequest record {|
    artists? artists = ();
    songs? songs = ();
    
|};

public type NewRecordResponse record {|
    string key = "";
    
|};

public type UpdateRecordRequest record {|
    string key = "";
    
|};

public type UpdateRecordResponse record {|
    string key = "";
    
|};

public type ReadRecordRequest record {|
    
|};

public type ReadRecordResponse record {|
    
|};



const string
function getDescriptorMap() returns map<string> {
    return {
        "storage-system.proto
        "google/protobuf/timestamp.proto":"0A1F676F6F676C652F70726F746F6275662F74696D657374616D702E70726F746F120F676F6F676C652E70726F746F627566223B0A0954696D657374616D7012180A077365636F6E647318012001280352077365636F6E647312140A056E616E6F7318022001280552056E616E6F7342580A13636F6D2E676F6F676C652E70726F746F627566420E54696D657374616D7050726F746F50015A057479706573F80101A20203475042AA021E476F6F676C652E50726F746F6275662E57656C6C4B6E6F776E5479706573620670726F746F33"
        
    };
}

